cmake_minimum_required(VERSION 3.13)

# initialize the SDK based on PICO_SDK_PATH
include(pico_sdk_import.cmake)

# TODO: optional other imports for pico 

# set project
project(benchmark_binaries)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

# uncomment this if we are using the pico w board
#set(PICO_BOARD pico_w)

# check we have at proper SDK version
if (PICO_SDK_VERSION_STRING VERSION_LESS "1.3.0")
    message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.3.0 or later required")
endif()

# Optional: set the path of this benchmark directory
# set(PICO_BENCHMARK_BINARIES_PATH {PROJECT_SOURCE_DIR})

# initialize the Raspberry Pi Pico SDK
pico_sdk_init()

# add modules/libraries

# add blinky example
add_subdirectory(blinky)
add_subdirectory(GPIO)
add_subdirectory(complex)
add_subdirectory(i2c)
add_subdirectory(Serial)
add_subdirectory(lib_collector)
add_subdirectory(lib_collector_inlined)
#add_subdirectory(spi)


# Optional: compiler options
#add_compile_options(-Wall
#        -Wno-format # int != int32_t as far as the compiler is concerned because gcc has int32_t as long int
#        -Wno-unused-function # we have some for the docs that aren't called
#        )

# the other commands are in each CMakeLists.txt per subdirectory